{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) {\n      if (b.hasOwnProperty(p)) d[p] = b[p];\n    }\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar React = require(\"react\");\n\nvar GridRowCell =\n/** @class */\nfunction (_super) {\n  __extends(GridRowCell, _super);\n\n  function GridRowCell() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  GridRowCell.prototype.render = function () {\n    var cellClass = this.props.settings.cellClass;\n    var className = this.props.settings.classPrefix + \"Cell \" + this.props.settings.classPrefix + \"Cell_\" + this.props.column.key;\n\n    if (cellClass) {\n      className = cellClass(className, this.props.column.key, this.props.row);\n    }\n\n    return React.createElement(\"td\", {\n      className: className,\n      \"data-key\": this.props.column.key,\n      onClick: this.onClick.bind(this, this.props.column.key)\n    }, this.props.item);\n  };\n\n  GridRowCell.prototype.onClick = function (key, e) {\n    if (this.props.onClickCell) {\n      this.props.onClickCell(e, key, this.props.row);\n    }\n  };\n\n  return GridRowCell;\n}(React.Component);\n\nexports.GridRowCell = GridRowCell;","map":null,"metadata":{},"sourceType":"script"}