{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:\\\\work\\\\inventi\\\\map-city\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\");\n\nexports.__esModule = true;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _Providers = require('./Providers');\n\nvar _Providers2 = _interopRequireDefault(_Providers);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var gen = fn.apply(this, arguments);\n    return new Promise(function (resolve, reject) {\n      function step(key, arg) {\n        try {\n          var info = gen[key](arg);\n          var value = info.value;\n        } catch (error) {\n          reject(error);\n          return;\n        }\n\n        if (info.done) {\n          resolve(value);\n        } else {\n          return Promise.resolve(value).then(function (value) {\n            step(\"next\", value);\n          }, function (err) {\n            step(\"throw\", err);\n          });\n        }\n      }\n\n      return step(\"next\");\n    });\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar asyncInputEvent = function asyncInputEvent(asyncHandler, syncHandler) {\n  var t = void 0;\n  return function (e) {\n    syncHandler && syncHandler(e);\n    clearTimeout(t);\n    t = setTimeout(function () {\n      asyncHandler(e);\n    }, 400);\n  };\n};\n\nvar InputBox = function (_React$Component) {\n  _inherits(InputBox, _React$Component);\n\n  function InputBox(props) {\n    _classCallCheck(this, InputBox);\n\n    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));\n\n    _this.input = null;\n    _this.state = {\n      open: _this.props.openSearchOnLoad,\n      closeButton: false,\n      info: false\n    };\n    _this.provider = null;\n    _this.responseCache = {};\n    _this.inputEventHandler = asyncInputEvent(_this.sendToAction.bind(_this), _this.syncInput.bind(_this));\n    _this.lastInfo = null;\n    return _this;\n  }\n\n  InputBox.prototype.inputMouseEnter = function inputMouseEnter(event) {\n    this.lock = true;\n  };\n\n  InputBox.prototype.inputMouseLeave = function inputMouseLeave(event) {\n    this.lock = false;\n  };\n\n  InputBox.prototype.aMouseEnter = function aMouseEnter(event) {\n    this.lock = true;\n  };\n\n  InputBox.prototype.aMouseLeave = function aMouseLeave(event) {\n    this.lock = false;\n  };\n\n  InputBox.prototype.aClick = function aClick(event) {\n    this.state.open ? this.closeSearch() : this.openSearch();\n  };\n\n  InputBox.prototype.inputBlur = function inputBlur(event) {\n    this.input.value === '' && !this.lock && this.closeSearch();\n  };\n\n  InputBox.prototype.inputClick = function inputClick(event) {\n    this.input.focus();\n\n    if (!this.input.value.startsWith(\":\") && this.lastInfo !== null && this.lastInfo !== '' && this.input.value !== '') {\n      this.info = this.lastInfo;\n      this.lastInfo = null;\n      this.setState({\n        info: true\n      });\n    }\n  };\n\n  InputBox.prototype.inputInput = function inputInput(event) {\n    this.inputEventHandler(event);\n  };\n\n  InputBox.prototype.inputKeyUp = function inputKeyUp(event) {\n    event.keyCode === 13 && this.beautifyValue(this.input.value);\n  };\n\n  InputBox.prototype.closeClick = function closeClick(event) {\n    this.closeSearch();\n  };\n\n  InputBox.prototype.sendToAction = function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(event) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (this.input.value.startsWith(\":\")) {\n                _context.next = 15;\n                break;\n              }\n\n              if (!Object.prototype.hasOwnProperty.call(this.responseCache, this.input.value)) {\n                _context.next = 5;\n                break;\n              } // console.log('from cache');\n\n\n              this.showInfo(this.responseCache[this.input.value].info);\n              _context.next = 15;\n              break;\n\n            case 5:\n              if (!(this.input.value.length >= 3)) {\n                _context.next = 15;\n                break;\n              } // console.log('fetching');\n\n\n              this.showInfo('Searching...');\n              _context.next = 9;\n              return this.provider.search(this.input.value);\n\n            case 9:\n              response = _context.sent;\n\n              if (!response.error) {\n                _context.next = 13;\n                break;\n              }\n\n              console.error(response.error);\n              return _context.abrupt('return', false);\n\n            case 13:\n              // console.log(response);\n              this.responseCache[this.input.value] = response;\n              this.showInfo(response.info);\n\n            case 15:\n            case 'end':\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function sendToAction(_x) {\n      return _ref.apply(this, arguments);\n    }\n\n    return sendToAction;\n  }();\n\n  InputBox.prototype.syncInput = function syncInput(event) {\n    !this.state.closeButton && this.setState({\n      closeButton: true\n    });\n\n    if (this.input.value == '') {\n      this.hideInfo();\n      this.state.closeButton && this.setState({\n        closeButton: false\n      });\n    }\n\n    if (!this.input.value.startsWith(\":\")) {// console.log(this.input.value);\n    }\n  };\n\n  InputBox.prototype.openSearch = function openSearch() {\n    var _this2 = this;\n\n    this.setState({\n      open: true\n    }, function () {\n      _this2.input.focus();\n    });\n  };\n\n  InputBox.prototype.closeSearch = function closeSearch() {\n    var _this3 = this;\n\n    this.setState({\n      open: this.props.openSearchOnLoad,\n      closeButton: false,\n      info: false\n    }, function () {\n      _this3.input.value = '';\n      _this3.info = '';\n      _this3.props.removeMarker && _this3.props.removeMarker();\n    });\n  };\n\n  InputBox.prototype.beautifyValue = function beautifyValue(value) {\n    // console.log(value);\n    if (value.startsWith(\":\")) {\n      var latLng = value.slice(1).split(',').filter(function (e) {\n        return !isNaN(Number(e));\n      }).map(function (e) {\n        return Number(e ? e : 0);\n      });\n\n      if (latLng.length <= 1) {\n        this.showInfo('Please enter a valid lat, lng');\n      } else {\n        this.hideInfo();\n        this.props.latLngHandler(latLng, latLng);\n      }\n    } else {\n      if (this.input.value.length < 3) {\n        var response = 'Please enter a valid lat,lng starting with \":\" or minimum 3 character to search';\n        this.showInfo(response);\n      }\n    }\n  };\n\n  InputBox.prototype.hideInfo = function hideInfo() {\n    this.lastInfo = this.info;\n    this.info = '';\n    this.setState({\n      info: false\n    });\n  };\n\n  InputBox.prototype.showInfo = function showInfo(info, activeIndex) {\n    var _this4 = this;\n\n    if (typeof info === 'string') {\n      this.info = _react2.default.createElement('span', {\n        className: 'leaflet-search-control-info-span'\n      }, info);\n    }\n\n    if ((typeof info === 'undefined' ? 'undefined' : _typeof(info)) === 'object') {\n      this.info = _react2.default.createElement('ul', {\n        className: 'leaflet-search-control-info-ul'\n      }, info.map(function (e, i) {\n        return _react2.default.createElement('li', {\n          key: e.name + '-' + i,\n          className: 'leaflet-search-control-info-li' + (typeof activeIndex !== 'undefined' ? activeIndex === i ? ' active' : '' : ''),\n          onClick: _this4.listItemClick.bind(_this4, e, info, i)\n        }, _react2.default.createElement('p', null, e.name));\n      }));\n    }\n\n    this.input.value && this.setState({\n      info: true\n    });\n  };\n\n  InputBox.prototype.listItemClick = function listItemClick(itemData, totalInfo, activeIndex, event) {\n    this.showInfo(totalInfo, activeIndex);\n    this.props.latLngHandler([Number(itemData.latitude), Number(itemData.longitude)], itemData.name);\n\n    if (this.props.closeResultsOnClick) {\n      this.hideInfo();\n    }\n  };\n\n  InputBox.prototype.setMaxHeight = function setMaxHeight() {\n    var containerRect = this.props.map.getContainer().getBoundingClientRect();\n    var divRect = this.input.getBoundingClientRect();\n    var maxHeight = Math.floor((containerRect.bottom - divRect.bottom - 10) * 0.95) + 'px';\n    this.div.style.maxHeight = maxHeight;\n  };\n\n  InputBox.prototype.componentDidMount = function componentDidMount() {\n    this.setMaxHeight();\n\n    if (this.props.provider && Object.keys(_Providers2.default).includes(this.props.provider)) {\n      var Provider = _Providers2.default[this.props.provider];\n      this.provider = new Provider(Object.assign({\n        providerKey: this.props.providerKey,\n        searchBounds: this.props.searchBounds\n      }, this.props.providerOptions));\n    } else {\n      throw new Error('You set the provider prop to ' + this.props.provider + ' but that isn\\'t recognised. You can choose from ' + Object.keys(_Providers2.default).join(\", \"));\n    }\n\n    if (this.props.search && Array.isArray(this.props.search) && !isNaN(Number(this.props.search[0])) && !isNaN(Number(this.props.search[1]))) {\n      this.input.value = ':' + this.props.search.toString();\n      this.openSearch();\n      this.syncInput(); // to show close button\n\n      this.props.latLngHandler([Number(this.props.search[0]), Number(this.props.search[1])], this.props.search.toString());\n    }\n  };\n\n  InputBox.prototype.render = function render() {\n    var _this5 = this;\n\n    return _react2.default.createElement('div', {\n      className: 'leaflet-search-control leaflet-bar-part leaflet-bar' + (this.state.open && ' leaflet-search-control-active')\n    }, _react2.default.createElement('a', {\n      className: 'leaflet-search-control-a leaflet-search-icon',\n      onClick: this.aClick.bind(this),\n      onMouseEnter: this.aMouseEnter.bind(this),\n      onMouseLeave: this.aMouseLeave.bind(this) // onMouseDown={this.aMouseDown.bind(this)}\n\n    }), _react2.default.createElement('input', {\n      ref: function ref(_ref2) {\n        return _this5.input = _ref2;\n      },\n      className: 'leaflet-search-control-input leaflet-search-input',\n      placeholder: this.props.inputPlaceholder,\n      onClick: this.inputClick.bind(this) // onMouseDown={this.inputMouseDown.bind(this)}\n      ,\n      onMouseEnter: this.inputMouseEnter.bind(this),\n      onMouseLeave: this.inputMouseLeave.bind(this),\n      onInput: this.inputInput.bind(this),\n      onBlur: this.inputBlur.bind(this),\n      onKeyUp: this.inputKeyUp.bind(this)\n    }), _react2.default.createElement('div', {\n      className: 'leaflet-search-control-close' + (this.state.closeButton ? ' leaflet-search-close' : ''),\n      onClick: this.closeClick.bind(this)\n    }, 'x'), _react2.default.createElement('div', {\n      ref: function ref(_ref3) {\n        return _this5.div = _ref3;\n      },\n      className: 'leaflet-search-control-info' + (this.state.info ? '' : ' close')\n    }, this.state.info && this.info));\n  };\n\n  return InputBox;\n}(_react2.default.Component);\n\nexports.default = InputBox;","map":null,"metadata":{},"sourceType":"script"}