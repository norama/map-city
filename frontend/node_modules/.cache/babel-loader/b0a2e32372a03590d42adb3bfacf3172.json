{"ast":null,"code":"import _assertThisInitialized from \"C:\\\\work\\\\inventi\\\\map-city\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _classCallCheck from \"C:\\\\work\\\\inventi\\\\map-city\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\work\\\\inventi\\\\map-city\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\work\\\\inventi\\\\map-city\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\work\\\\inventi\\\\map-city\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\work\\\\inventi\\\\map-city\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\work\\\\inventi\\\\map-city\\\\frontend\\\\src\\\\components\\\\WeatherMap.js\";\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport _ from 'lodash';\nimport JsonTable from 'ts-react-json-table';\nimport { ReactLeafletSearch } from 'react-leaflet-search';\nimport './WeatherMap.css';\nimport './JsonTable.css';\nimport { Map, TileLayer, Marker, Popup, ZoomControl, withLeaflet } from 'react-leaflet';\nimport getWeather from '../services/WeatherData';\n\nvar WeatherMapSearch =\n/*#__PURE__*/\nfunction (_ReactLeafletSearch) {\n  _inherits(WeatherMapSearch, _ReactLeafletSearch);\n\n  function WeatherMapSearch(props, context) {\n    _classCallCheck(this, WeatherMapSearch);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(WeatherMapSearch).call(this, Object.assign({\n      showMarker: false\n    }, props), context));\n  }\n\n  _createClass(WeatherMapSearch, [{\n    key: \"latLngHandler\",\n    value: function latLngHandler(latLng, info) {\n      var _this = this;\n\n      this.setState({\n        search: latLng,\n        info: info\n      }, function () {\n        _this.flyTo();\n\n        var latlng = {\n          lat: latLng[0],\n          lng: latLng[1]\n        };\n\n        _this.props.addMarker(latlng);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return null;\n    }\n  }]);\n\n  return WeatherMapSearch;\n}(ReactLeafletSearch);\n\nvar Search = withLeaflet(WeatherMapSearch);\n\nvar WeatherMap =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(WeatherMap, _Component);\n\n  function WeatherMap(props) {\n    var _this2;\n\n    _classCallCheck(this, WeatherMap);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(WeatherMap).call(this, props));\n\n    _this2.addMarker = function (latlng) {\n      _this2.updateMarker(_.uniqueId('marker-'), latlng);\n    };\n\n    _this2.updateMarker = function (id, latlng) {\n      var self = _assertThisInitialized(_assertThisInitialized(_this2));\n\n      getWeather(latlng, function (weather) {\n        self.setState(function (prevState) {\n          var markers = _.clone(prevState.markers);\n\n          var index = _.findIndex(markers, {\n            id: id\n          });\n\n          if (index !== -1) {\n            markers[index].weather = weather;\n            markers[index].latlng = latlng;\n          } else {\n            markers.push({\n              id: id,\n              weather: weather,\n              latlng: latlng\n            });\n          }\n\n          return {\n            markers: markers\n          };\n        });\n      });\n    };\n\n    _this2.handleLocationFound = function (e) {\n      _this2.setState({\n        center: e.latlng\n      }, function () {\n        _this2.addMarker(_this2.state.center);\n      });\n    };\n\n    _this2.handleClick = function (e) {\n      _this2.addMarker(e.latlng);\n    };\n\n    _this2.mapRef = React.createRef();\n    _this2.state = {\n      markers: [],\n      center: {\n        lat: 51.505,\n        lng: -0.09\n      },\n      zoom: 13\n    };\n    return _this2;\n  }\n\n  _createClass(WeatherMap, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"weather-Root\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(Map, {\n        center: this.state.center,\n        onLocationfound: this.handleLocationFound,\n        onClick: this.handleClick,\n        ref: this.mapRef,\n        zoomControl: false,\n        zoom: this.state.zoom,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(TileLayer, {\n        attribution: \"&copy <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), React.createElement(ZoomControl, {\n        position: \"bottomright\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), React.createElement(Search, {\n        position: \"topleft\",\n        provider: \"OpenStreetMap\",\n        showMarker: true,\n        showPopup: true,\n        addMarker: this.addMarker,\n        closeResultsOnClick: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), React.createElement(WeatherMarkersList, {\n        markers: this.state.markers,\n        onDragend: this.updateMarker,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.mapRef.current.leafletElement.locate();\n    }\n  }]);\n\n  return WeatherMap;\n}(Component);\n\nexport { WeatherMap as default };\n\nvar WeatherMarkersList =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(WeatherMarkersList, _Component2);\n\n  function WeatherMarkersList() {\n    _classCallCheck(this, WeatherMarkersList);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(WeatherMarkersList).apply(this, arguments));\n  }\n\n  _createClass(WeatherMarkersList, [{\n    key: \"render\",\n    value: function render() {\n      var onDragend = this.props.onDragend;\n      var items = this.props.markers.map(function (marker) {\n        return React.createElement(WeatherMarker, {\n          key: marker.id,\n          id: marker.id,\n          latlng: marker.latlng,\n          weather: marker.weather,\n          onDragend: onDragend,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        });\n      });\n      return React.createElement(\"div\", {\n        style: {\n          display: 'none'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, items);\n    }\n  }]);\n\n  return WeatherMarkersList;\n}(Component);\n\nWeatherMarkersList.propTypes = {\n  markers: PropTypes.array.isRequired\n};\n\nvar WeatherMarker =\n/*#__PURE__*/\nfunction (_Component3) {\n  _inherits(WeatherMarker, _Component3);\n\n  function WeatherMarker(props) {\n    var _this3;\n\n    _classCallCheck(this, WeatherMarker);\n\n    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(WeatherMarker).call(this, props));\n\n    _this3.handleDragend = function (e) {\n      _this3.props.onDragend(_this3.props.id, e.target._latlng);\n    };\n\n    _this3.markerRef = React.createRef();\n    return _this3;\n  }\n\n  _createClass(WeatherMarker, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Marker, {\n        ref: this.markerRef,\n        position: [this.props.latlng.lat, this.props.latlng.lng],\n        draggable: true,\n        onDragend: this.handleDragend,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(Popup, {\n        className: \"weather-Popup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(WeatherPopup, {\n        weather: this.props.weather,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.markerRef.current.leafletElement.openPopup();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.latlng !== prevProps.latlng || this.props.weather !== prevProps.weather) {\n        this.markerRef.current.leafletElement.openPopup();\n      }\n    }\n  }]);\n\n  return WeatherMarker;\n}(Component);\n\nvar WeatherPopup = function WeatherPopup(_ref) {\n  var weather = _ref.weather;\n  var w = weather;\n  var rows = [{\n    name: 'position',\n    value: '(lat: ' + w.coord.lat + ', lon: ' + w.coord.lon + ')'\n  }, {\n    name: 'place',\n    value: w.name + ' (' + w.sys.country + ')'\n  }, {\n    name: 'weather',\n    value: w.weather[0].main + ': ' + w.weather[0].description\n  }, {\n    name: 'wind',\n    value: 'speed (m/s): ' + w.wind.speed + (w.wind.deg ? '  direction (degrees): ' + w.wind.deg : '')\n  }, {\n    name: 'humidity (%)',\n    value: w.main.humidity\n  }, {\n    name: 'pressure (hPa)',\n    value: w.main.pressure\n  }, {\n    name: \"temperature (\\u2103)\",\n    value: w.main.temp\n  }];\n  return React.createElement(JsonTable, {\n    rows: rows,\n    settings: {\n      header: false\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213\n    },\n    __self: this\n  });\n};","map":{"version":3,"sources":["C:\\work\\inventi\\map-city\\frontend\\src\\components\\WeatherMap.js"],"names":["PropTypes","React","Component","_","JsonTable","ReactLeafletSearch","Map","TileLayer","Marker","Popup","ZoomControl","withLeaflet","getWeather","WeatherMapSearch","props","context","Object","assign","showMarker","latLng","info","setState","search","flyTo","latlng","lat","lng","addMarker","Search","WeatherMap","updateMarker","uniqueId","id","self","weather","prevState","markers","clone","index","findIndex","push","handleLocationFound","e","center","state","handleClick","mapRef","createRef","zoom","current","leafletElement","locate","WeatherMarkersList","onDragend","items","map","marker","display","propTypes","array","isRequired","WeatherMarker","handleDragend","target","_latlng","markerRef","openPopup","prevProps","WeatherPopup","w","rows","name","value","coord","lon","sys","country","main","description","wind","speed","deg","humidity","pressure","temp","header"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport _ from 'lodash';\n\nimport JsonTable from 'ts-react-json-table';\n\nimport { ReactLeafletSearch } from 'react-leaflet-search';\n\nimport './WeatherMap.css';\nimport './JsonTable.css';\n\nimport {\n  Map,\n  TileLayer,\n  Marker,\n  Popup,\n  ZoomControl,\n  withLeaflet\n} from 'react-leaflet';\n\nimport getWeather from '../services/WeatherData';\n\nclass WeatherMapSearch extends ReactLeafletSearch {\n\n  constructor(props, context) {\n    super(Object.assign({ showMarker: false }, props), context);\n  }\n\n  latLngHandler(latLng, info) {\n\n    this.setState({ search: latLng, info: info }, () => {\n      this.flyTo();\n\n      const latlng = {\n        lat: latLng[0],\n        lng: latLng[1]\n      };\n\n      this.props.addMarker(latlng);\n    });\n  }\n\n  render() {\n    return null;\n  }\n}\n\nconst Search = withLeaflet(WeatherMapSearch);\n\nexport default class WeatherMap extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.mapRef = React.createRef();\n\n    this.state = {\n      markers: [],\n      center: {\n        lat: 51.505,\n        lng: -0.09,\n      },\n      zoom: 13,\n    };\n  }\n\n  render() {\n\n    return (<div className='weather-Root'>\n      <Map \n        center={this.state.center} \n        onLocationfound={this.handleLocationFound}\n        onClick={this.handleClick}\n        ref={this.mapRef}\n        zoomControl={false}\n        zoom={this.state.zoom}>\n\n        <TileLayer\n          attribution=\"&amp;copy <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n        <ZoomControl\n          position=\"bottomright\"\n        />\n        <Search\n          position=\"topleft\"\n          provider=\"OpenStreetMap\"\n          showMarker={true}\n          showPopup={true}\n          addMarker={this.addMarker}\n          closeResultsOnClick={true}\n        />\n        <WeatherMarkersList markers={this.state.markers} onDragend={this.updateMarker} />\n      </Map>\n    </div>)\n  }\n\n  addMarker = (latlng) => {\n    this.updateMarker(_.uniqueId('marker-'), latlng);\n  };\n\n  updateMarker = (id, latlng) => {\n    const self = this;\n    getWeather(latlng, (weather) => {\n      self.setState((prevState) => {\n        let markers = _.clone(prevState.markers);\n\n        const index = _.findIndex(markers, {id});\n        if (index !== -1) {\n          markers[index].weather = weather;\n          markers[index].latlng = latlng;\n        } else {\n          markers.push({\n            id, weather, latlng\n          });\n        }\n\n        return {\n          markers\n        };\n      });\n    });\n\n  }\n\n  handleLocationFound = (e) => {\n    this.setState({\n      center: e.latlng\n    }, () => {\n      this.addMarker(this.state.center);\n    });\n  };\n\n  handleClick = (e) => {\n    this.addMarker(e.latlng);\n  }\n\n  componentDidMount() {\n    this.mapRef.current.leafletElement.locate();\n  }\n}\n\nclass WeatherMarkersList extends Component {\n  render() {\n    const onDragend = this.props.onDragend;\n    const items = this.props.markers.map((marker) => (\n      <WeatherMarker key={marker.id} id={marker.id} latlng={marker.latlng} weather={marker.weather} onDragend={onDragend} />\n    ));\n    return <div style={{ display: 'none' }}>{items}</div>;   \n  }\n}\n\nWeatherMarkersList.propTypes = {\n  markers: PropTypes.array.isRequired,\n}\n\nclass WeatherMarker extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.markerRef = React.createRef();\n  }\n\n  render() {\n    return (\n      <Marker\n        ref={this.markerRef}\n        position={[this.props.latlng.lat, this.props.latlng.lng]}\n        draggable={true}\n        onDragend={this.handleDragend}>\n\n        <Popup className='weather-Popup'>\n          <WeatherPopup weather={this.props.weather} />\n        </Popup>\n      </Marker>\n    );\n  }\n\n  componentDidMount() {\n    this.markerRef.current.leafletElement.openPopup();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.latlng !== prevProps.latlng || this.props.weather !== prevProps.weather) {\n      this.markerRef.current.leafletElement.openPopup();\n    }\n  }\n\n  handleDragend = (e) => {\n    this.props.onDragend(this.props.id, e.target._latlng);\n  };\n}\n\nconst WeatherPopup = ({ weather }) => {\n  const w = weather;\n  const rows = [{\n    name: 'position', value: '(lat: '+w.coord.lat + ', lon: '+w.coord.lon + ')'\n  }, {\n    name: 'place', value: w.name + ' ('+ w.sys.country +')'\n  }, {\n    name: 'weather', value: w.weather[0].main + ': ' + w.weather[0].description\n  }, {\n    name: 'wind', value: 'speed (m/s): ' + w.wind.speed + (w.wind.deg ? '  direction (degrees): ' + w.wind.deg : '')\n  }, {\n    name: 'humidity (%)', value: w.main.humidity\n  }, {\n    name: 'pressure (hPa)', value: w.main.pressure\n  }, {\n    name: 'temperature (\\u2103)', value: w.main.temp\n  }];\n\n  return <JsonTable rows={rows} settings={{header: false}} />;\n};\n \n\n"]},"metadata":{},"sourceType":"module"}